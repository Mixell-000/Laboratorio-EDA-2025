import java.util.*;

class AnalizadorDeNotas {
    // atributos
    double[][] notas; //[Estudiante][evaluacion]
    String[] evaluaciones;
    int[] rut;
    int cantEstudiantes;
    int cantEvaluaciones;

    // constructor 1
    public AnalizadorDeNotas(int estudiantes, int evaluaciones) {
        this.cantEstudiantes = estudiantes;
        this.cantEvaluaciones = evaluaciones;
        this.notas = new double[estudiantes][evaluaciones];
        this.evaluaciones = new String[evaluaciones];
        this.rut = new int[estudiantes];
        
         Random rand = new Random();

    // Generar nombres de evaluaciones
    for (int j = 0; j < evaluaciones; j++) {
        this.evaluaciones[j] = "E" + (j + 1);
    }

    // Generar RUT y notas
    for (int i = 0; i < estudiantes; i++) {
        this.rut[i] = 10000000 + i; // RUT
        for (int j = 0; j < evaluaciones; j++) {
            double randomValue = rand.nextDouble();  // número [0.0, 1.0]
            this.notas[i][j] = Math.round(randomValue * 70) / 10.0; // escalar a [0.0, 7.0]
        }
    }
        
    }
    // constructor 2
    public AnalizadorDeNotas(int estudiantes, int evaluaciones, String[] nombresEvaluaciones) {
    this(estudiantes, evaluaciones); // llama al constructor 1
    if (nombresEvaluaciones.length == evaluaciones) {
        this.evaluaciones = nombresEvaluaciones;
    } else {
        throw new IllegalArgumentException("Cantidad de nombres no coincide con evaluaciones");
    }
}

    // Metodos
    public double calcularPromedioEstudiante(int numEstudiante) {//listo
        
        double suma = 0;
        
        for(int  i=0 ; i<cantEvaluaciones;i++){
            suma += notas[numEstudiante][i];
        }
        return suma/cantEvaluaciones;
    }//listo

    public double calcularPromedioEvaluacion(int index) {
        double suma = 0;
        
        for(int  i=0 ; i<cantEvaluaciones;i++){
            suma += notas[i][index];
        }
        return suma/cantEstudiantes;
    }//listo

    public double calcularVarianzaEvaluacion(int index) {
        
        double promedio = 0;
        double suma = 0;
        
        for(int  i=0 ; i<cantEstudiantes;i++){
            promedio += notas[i][index];
            
            
            
        }
        promedio = promedio/cantEstudiantes;
          for(int  i=0 ; i<cantEstudiantes;i++){
            suma += Math.pow((notas[i][index] - promedio) , 2);
        }
        suma = suma/cantEstudiantes;
        

        return suma;
    }//listo

    public double[] calcularPromedioEstudiantes() {
        
        double[] promedio = new double[cantEstudiantes];
        
        for(int i=0 ; i<cantEstudiantes ; i++){
            double suma = 0;
            for(int j=0 ; j<cantEvaluaciones ; j++){
                suma += notas[i][j];
            }
            promedio[i] = suma/cantEvaluaciones;
        }
        return promedio;
    }//listo

    public double[] calcularVarianzaEstudiantes() {
        
        double[] varianzaA = new double[cantEstudiantes];
        
        for(int  i=0 ; i<cantEstudiantes;i++){
            double suma = 0;
            double promedio = 0;
            for(int j=0 ; j<cantEvaluaciones ; j++){
                promedio += notas[i][j];
            }
            
        promedio = promedio/cantEvaluaciones;
        
            for(int k = 0 ; k<cantEvaluaciones; k++){
            suma += Math.pow((notas[i][k] - promedio) , 2);
        }
            varianzaA[i] = suma / cantEvaluaciones;
        }
 
        return varianzaA;
    }//listo

    public double[] calcularPromedioEvaluaciones(String[] evaluacionesSeleccionadas) {
    double[] promedios = new double[cantEstudiantes];

    for (int i = 0; i < cantEstudiantes; i++) {
        double suma = 0;

        for (String evalNombre : evaluacionesSeleccionadas) {
            int indice = -1;

            for (int j = 0; j < this.evaluaciones.length; j++) {
                if (this.evaluaciones[j].equals(evalNombre)) {
                    indice = j;
                    break;
                }
            }

            if (indice == -1) {
                throw new IllegalArgumentException(
                    "Evaluación no encontrada: " + evalNombre
                );
            }

            suma += notas[i][indice];
        }

        promedios[i] = suma / evaluacionesSeleccionadas.length;
    }

    return promedios;
}//listo

    public String encontrarMaximo(int index) {
        
        int indicenotaMAX = 0;
        double notaMAX = 0;
        
        for(int i=0 ; i<cantEstudiantes ; i++){
            if(notaMAX < notas[i][index]){
                
                notaMAX = notas[i][index];
                indicenotaMAX = i;
            }
        }
        
        return String.valueOf(rut[indicenotaMAX]);
    }//listo
}

public class Main {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);

        System.out.println("=== Sistema Analizador de Notas ===");
        System.out.print("Ingrese cantidad de estudiantes: ");
        int estudiantes = sc.nextInt();
        System.out.print("Ingrese cantidad de evaluaciones: ");
        int evaluaciones = sc.nextInt();

        AnalizadorDeNotas analizador = new AnalizadorDeNotas(estudiantes, evaluaciones);

        int opcion;
        do {
            System.out.println("\n--- Menú ---");
            System.out.println("1. Mostrar promedio de un estudiante");
            System.out.println("2. Mostrar promedio de una evaluación");
            System.out.println("3. Mostrar varianza de una evaluación");
            System.out.println("4. Mostrar promedios de todos los estudiantes");
            System.out.println("5. Mostrar varianzas de todos los estudiantes");
            System.out.println("6. Mostrar promedio de evaluaciones seleccionadas");
            System.out.println("7. Mostrar RUT con la mejor nota en una evaluación");
            System.out.println("8. Salir");
            System.out.print("Seleccione una opción: ");
            opcion = sc.nextInt();

            switch(opcion) {
                case 1:
                    System.out.print("Ingrese índice del estudiante (1 a " + (estudiantes) + "): ");
                    int est = sc.nextInt();
                    System.out.println("Promedio estudiante " + est + ": " + analizador.calcularPromedioEstudiante(est));
                    break;

                case 2:
                    System.out.print("Ingrese índice de la evaluación (1 a " + (evaluaciones) + "): ");
                    int eval = sc.nextInt();
                    System.out.println("Promedio evaluación " + eval + ": " + analizador.calcularPromedioEvaluacion(eval));
                    break;

                case 3:
                    System.out.print("Ingrese índice de la evaluación (1 a " + (evaluaciones) + "): ");
                    eval = sc.nextInt();
                    System.out.println("Varianza evaluación " + eval + ": " + analizador.calcularVarianzaEvaluacion(eval));
                    break;

                case 4:
                    System.out.println("Promedios de todos los estudiantes:");
                    System.out.println(Arrays.toString(analizador.calcularPromedioEstudiantes()));
                    break;

                case 5:
                    System.out.println("Varianzas de todos los estudiantes:");
                    System.out.println(Arrays.toString(analizador.calcularVarianzaEstudiantes()));
                    break;

                case 6:
                    sc.nextLine(); // limpiar buffer
                    System.out.print("Ingrese nombres de evaluaciones separados por coma: ");
                    String linea = sc.nextLine();
                    String[] seleccion = linea.split(",");
                    System.out.println("Promedios en las evaluaciones seleccionadas:");
                    System.out.println(Arrays.toString(analizador.calcularPromedioEvaluaciones(seleccion)));
                    break;

                case 7:
                    System.out.print("Ingrese índice de la evaluación (1 a " + (evaluaciones) + "): ");
                    eval = sc.nextInt();
                    System.out.println("RUT del mejor en evaluación " + eval + ": " + analizador.encontrarMaximo(eval));
                    break;

                case 8:
                    System.out.println("Saliendo...");
                    break;

                default:
                    System.out.println("Opción no válida.");
            }
        } while(opcion != 8);

        sc.close();
    }
}
